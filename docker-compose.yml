networks:
  n8n:
    name: n8n
services:
  n8n:
    image: licenpro/n8n:1.95.3
    container_name: n8n
    ports:
      - '5678:5678'
    volumes:
      - ./n8n-data:/home/node/.n8n
    restart: always
    environment:
      - DB_TYPE
      - DB_POSTGRESDB_DATABASE
      - DB_POSTGRESDB_HOST
      - DB_POSTGRESDB_PORT
      - DB_POSTGRESDB_USER
      - DB_POSTGRESDB_PASSWORD
      - N8N_RUNNERS_ENABLED=true
      - N8N_LOG_LEVEL=debug
      - TZ
    networks:
      - n8n
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    networks:
      - n8n
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - TZ
      - POSTGRES_USER=${DB_POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_POSTGRESDB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
